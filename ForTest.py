# # # from tkinter import *
# # # root = Tk()
# # #
# # # img = PhotoImage(file = 'e:/python/chatroomforgit/6597310559704450538.gif')
# # #
# # # button1 = Button(root,image=img, height=300, width=300)
# # # button1.grid(row=1, column=0)
# # #
# # # button2 = Button(root, text='2')
# # # button2.grid(row=1, column=1)
# # #
# # # button3 = Button(root, text='3')
# # # button3.grid(row=2, column=0)
# # #
# # # button4 = Button(root, text='4')
# # # button4.grid(row=2, column=1)
# # #
# # #
# # # root.mainloop()
# #
# # #!/usr/bin/env python
# # #coding=utf-8
# # #flag.py
# #
# # # import marshal, zlib, base64
# # # #print(zlib.decompress())
# # # print(base64.b64decode('eJxtVP9r21YQvyd/ieWm66Cd03QM1B8C3pggUuzYCSWstHSFQijyoJBhhGq9OXJl2ZFeqAMOK6Q/94f9Ofvn1s+d7Lgtk/3O997du/vc584a0eqpYP2GVfwDEeOrKCU6g2LRRyiK4oooFsVVUSqkqxTX6J1F+SfSNYrrdKPorC76luhbpOEGCZNFZw2KG3Rmk26QtuXi3xTb7ND6/aVu0g2RuvhEcZNut5lAGbTvAFbyH57TkYLKy8J6xpDvQxiiiaIlcdqJxVcHbXY6bXNlZgviPCrO0+StqfKd88gzNh/qRZyMdWHE29TZZvIkG7eZFRGGRcBmsXJaUoKCQ9fWKHwSqNeKFnsM5PnwJ7q2aKk4AFhcWtQCh+ChB5+Lu/RmyYUxmtOEYxas7i/2iuR7Ti14OEOSmU0RADd4+dQzbM1FJhukAUeQ+kZROuLyioagrau76kc1slY1NNaY/y3LAxDQBrAICJisV2hMdF2lxQcyFuMoqcX3+TCl6xotqzSpkqmxYVmjXVjAXiwBsEfBrd1VvTvLCj2EXRnhoryAKdpxcIgJcowUB68yAx/tlCAuPHqDuZo0CN3CUGHwkPhGMA7aXMfphjbmQLhLhJcHa0a+mpgB191c1U1lnHJQbgkHx+WGxeJbejnpkzSavo2jkxZ7i725npGAaTc8FXmUjbUETHUmkxXN5zqL5WiWxwE7Bc11yyYzNJpN02jerq+DzNNodfxOX8kE4FcmYKscDdYD1oPGGucXYNmgs1F+NTf3GOt3Mg7b+NTVruqoQyX1hOEUacKw+AGbP38ZOq9THRXaSbL5pXGQ8bho/Z/lrzQaHxdoCrlev+t6nZ7re57r+57rHXag93Deh37k+vuw9zorO/Qj/B50cAf2oyOsvut3D+ADWxdxfN/1Drqu39mHzvcRswv/Hvz7sHeg9w8Qzy99DzuFwxhPhs6zWTbOI3OZRiaZZcVj5wVwOklx7OwVxR47PR46r/SVM8ulBJic9zku/eqY/MqJxiDj+Gd55wS3f35pbLCzHoEwzKKpDkN5i+TR+1AYCWTo5IV0Z0P9H3phDDd6lMzPdS5bbo9eJGbTsW9nbDqLL1N9Iq+rRxDbll2x67a9Lf27hw5uK1s1rZr6DOPF+FI='))))
# # # #exec(marshal.loads(zlib.decompress(base64.b64decode('eJxtVP9r21YQvyd/ieWm66Cd03QM1B8C3pggUuzYCSWstHSFQijyoJBhhGq9OXJl2ZFeqAMOK6Q/94f9Ofvn1s+d7Lgtk/3O997du/vc584a0eqpYP2GVfwDEeOrKCU6g2LRRyiK4oooFsVVUSqkqxTX6J1F+SfSNYrrdKPorC76luhbpOEGCZNFZw2KG3Rmk26QtuXi3xTb7ND6/aVu0g2RuvhEcZNut5lAGbTvAFbyH57TkYLKy8J6xpDvQxiiiaIlcdqJxVcHbXY6bXNlZgviPCrO0+StqfKd88gzNh/qRZyMdWHE29TZZvIkG7eZFRGGRcBmsXJaUoKCQ9fWKHwSqNeKFnsM5PnwJ7q2aKk4AFhcWtQCh+ChB5+Lu/RmyYUxmtOEYxas7i/2iuR7Ti14OEOSmU0RADd4+dQzbM1FJhukAUeQ+kZROuLyioagrau76kc1slY1NNaY/y3LAxDQBrAICJisV2hMdF2lxQcyFuMoqcX3+TCl6xotqzSpkqmxYVmjXVjAXiwBsEfBrd1VvTvLCj2EXRnhoryAKdpxcIgJcowUB68yAx/tlCAuPHqDuZo0CN3CUGHwkPhGMA7aXMfphjbmQLhLhJcHa0a+mpgB191c1U1lnHJQbgkHx+WGxeJbejnpkzSavo2jkxZ7i725npGAaTc8FXmUjbUETHUmkxXN5zqL5WiWxwE7Bc11yyYzNJpN02jerq+DzNNodfxOX8kE4FcmYKscDdYD1oPGGucXYNmgs1F+NTf3GOt3Mg7b+NTVruqoQyX1hOEUacKw+AGbP38ZOq9THRXaSbL5pXGQ8bho/Z/lrzQaHxdoCrlev+t6nZ7re57r+57rHXag93Deh37k+vuw9zorO/Qj/B50cAf2oyOsvut3D+ADWxdxfN/1Drqu39mHzvcRswv/Hvz7sHeg9w8Qzy99DzuFwxhPhs6zWTbOI3OZRiaZZcVj5wVwOklx7OwVxR47PR46r/SVM8ulBJic9zku/eqY/MqJxiDj+Gd55wS3f35pbLCzHoEwzKKpDkN5i+TR+1AYCWTo5IV0Z0P9H3phDDd6lMzPdS5bbo9eJGbTsW9nbDqLL1N9Iq+rRxDbll2x67a9Lf27hw5uK1s1rZr6DOPF+FI='))))
# # s = '_____*((__//__+___+______-____%____)**((___%(___-_))+________+(___%___+_____+_______%__+______-(______//(_____%___)))))+__*(((________/__)+___%__+_______-(________//____))**(_*(_____+_____)+_______+_________%___))+________*(((_________//__+________%__)+(_______-_))**((___+_______)+_________-(______//__)))+_______*((___+_________-(______//___-_______%__%_))**(_____+_____+_____))+__*(__+_________-(___//___-_________%_____%__))**(_________-____+_______)+(___+_______)**(________%___%__+_____+______)+(_____-__)*((____//____-_____%____%_)+_________)**(_____-(_______//_______+_________%___)+______)+(_____+(_________%_______)*__+_)**_________+_______*(((_________%_______)*__+_______-(________//________))**_______)+(________/__)*(((____-_+_______)*(______+____))**___)+___*((__+_________-_)**_____)+___*(((___+_______-______/___+__-_________%_____%__)*(___-_+________/__+_________%_____))**__)+(_//_)*(((________%___%__+_____+_____)%______)+_______-_)**___+_____*((______/(_____%___))+_______)*((_________%_______)*__+_____+_)+___//___+_________+_________/___'.replace('________', '8').replace('_______', '7').replace('______', '6').replace('_____', '5').replace('____', '4').replace('___', '3').replace('__', '2').replace('_', '1')
# #
# # print(s)
# # print(int(5*((2//2+3+6-4%4)**((3%(3-1))+8+(3%3+5+7%2+6-(6//(5%3)))))+2*(((8/2)+3%2+7-(8//4))**(1*(5+5)+7+81%3))+8*(((81//2+8%2)+(7-1))**((3+7)+81-(6//2)))+7*((3+81-(6//3-7%2%1))**(5+5+5))+2*(2+81-(3//3-81%5%2))**(81-4+7)+(3+7)**(8%3%2+5+6)+(5-2)*((4//4-5%4%1)+81)**(5-(7//7+81%3)+6)+(5+(81%7)*2+1)**81+7*(((81%7)*2+7-(8//8))**7)+(8/2)*(((4-1+7)*(6+4))**3)+3*((2+81-1)**5)+3*(((3+7-6/3+2-81%5%2)*(3-1+8/2+81%5))**2)+(1//1)*(((8%3%2+5+5)%6)+7-1)**3+5*((6/(5%3))+7)*((81%7)*2+5+1)+3//3+81+81/3))
#
# # def bin2dec(string_num):
# #     return str(int(string_num, 2))
# #
# # print(bin2dec('10000000'))
#
# # def decode(s):
# #     #print(''.join([chr(i) for i in [int(b, 2) for b in s.split(' ')]]))
# #     return ''.join([chr(i) for i in [int(b, 2) for b in s.split(' ')]])
# #
# # def bin2dec(string_num):
# #     return str(int(string_num, 2))
# #
# # s
# #
# # text = ''
# # num = 0
# # all_string = ''
# # sum = 0
# #
# # for i in range(len(s)):
# #     text += s[i]
# #     num += 1
# #     if num == 7:
# #         print(chr(int(bin2dec(text))), end='')
# #         all_string = all_string + text + ' '
# #         text = ''
# #         num = 0
# #
# # #print(all_string)
# #
# # #decode('1101000 1100101 1101100 1101100 1101111')
# # new = '1000000 1101111 0100111 0110010 0011001 0110001 0010100 1111010 1100011 1100101 0110010 1011101 0001111 0000011 0111100 1110100 1010101 0011110 0110110 0000100 1101000 0000010 1001100 0000101 1000000 1000000 1100011 1010111 0011100 0001001 0001000 0010101 1000100 0101010 1010000 1100101 1100100 1100101 0011101 1010010 1111100 1011101 1010010 1110111 1100110 1111011 0100101 0000010 1101011 1000110 0111000 1000100 0100001 1001110 0001011 1111011 0001111 0000011 1011111 0100001 0011110 0011000 1001100 1010101 0101001 1001000 1100100 1110110 1011000 1010001 1010101 0001001 1000111 0011011 0011010 0010000 1110110 0111100 1100110 0010001 0000001 1001010 0111111 1100110 0001010 0001110 1001101 1100100 1010010 0100011 0000011 1100001 1011100 1111000 1110011 0110101 1101001 1101110 0100001 0100001 1001111 1100011 1101011 0100100 1101000 1001001 1101100 1011100 0100111 0111101 0100101 0101100 1011111 0000101 0110110 1110000 0010010 0010101 1100101 1111001 0101100 1000010 0010100 1001010 0111100 0100101 0110100 1010110 0010001 0111101 0000101 1110001 1011010 0110001 0101101 0100010 1000010 1101000 1100011 1110001 0100110 0101101 0000111 0111001 1010011 0101000 1011011 0101011 0001101 0010011 1101111 1100110 1000111 0010101 0001110 0001010 0000101 1111000 0110000 1101000 1110101 1101111 0000100 1111110 0111011 0010011 1101101 0111000 1101110 1110011 0010001 0001011 0010111 1100101 0101111 1100101 1011100 0011000 1111010 1101000 1000000 1010101 0010101 0000110 0110000 0100010 0001101 0111000 1101100 1101010 0011111 0010000 1110110 1001011 0000011 1000001 0010011 0100000 0101111 0101001 0000110 0010100 1110011 1011111 0110000 0111110 0011111 1100111 0010111 1011110 1000011 0100000 1111011 1010101 1101001 0110101 0101100 0101000 0011110 0010100 0010011 0110000 0100111 1000000 0111110 1010111 0111000 0101101 0110100 1011101 1000011 1100001 0010000 1001011 0111000 1010001 0010011 1001111 1100111 1101001 0110100 1011011 0000101 0101100 0100101 1110011 1000000 1110000 0010011 1001111 0000000 1010000 0010010 0000001 0110111 1001111 1010101 0001010 1100001 0101011 1111011 1010001 0111100 1110101 1010001 1011101 1001100 1100011 0000011 0101001 1100000 0010101 1001000 1110011 1001000 0100011 1110111 1010101 0011111 0011100 0111111 0000000 0001100 0001000 1100100 0110100 1111001 0101100 0110100 1011001 0011100 0010000 1110000 1100011 0010100 1000011 0000110 0111001 1110001 0001011 1010000 0000001 0010000 1001110 1101010 0110101 0000100 0000001 0110001 1100001 0100101 0010010 1001000 1110000 0000100 1110111 0101110 0110010 0010010 0100011 1010000 1000101 0000000 0110011 1101010 1001001 1001011 0101110 1101110 0001000 1001010 1010001 1001110 0110010 1011110 1110010 1110101 0100100 1101000 1100011 1001101 1011110 1110101 1100111 0011000 0100100 1000101 0001000 0100110 0101010 1100011 0111000 0110000 1100110 0010000 1110101 0111000 1010110 0001001 1010101 0010000 0110101 1100011 1011110 1011010 0111001 1110111 0100101 1001010 1011011 1100010 0101100 0101011 0001010 1011001 1101101 1100000 1010111 0001110 0110010 0101110 1000010 1000010 1110001 1100100 1001000 1111011 1000100 1101111 1110001 0101011 0000111 1011011 0100011 1100000 0101001 1010110 0011010 0000110 0010011 0110001 1001010 0110111 0000010 1111000 0111000 1110000 1110010 0111110 1001101 0100101 1101111 1110010 0011101 0110010 0001001 0000001 0001101 0011010 1110101 0100101 1101010 1010000 1100011 1110100 0010010 0011111 0011010 0000101 0111101 1100001 1000011 0011000 1110000 1101100 0101011 1001001 0110110 0101111 0001101 0100011 0111011 0110010 1111000 0101010 1000001 0101010 1110101 0111011 1110100 1011011 0000011 1010001 0010101 1001101 0111101 1100101 1010100 1001010 0110000 1110010 1000000 1110110 0101110 0101110 1001011 0111111 0101010 0000100 0011100 1001110 0100110 1010111 0101101 1010000 0101111 0010011 0111011 0001100 1100100 0000011 0100110 0101010 1101100 0010000 1100101 1010010 1110100 1111000 0111111 1011110 0010101 1111110 1110101 0101011 0101101 1111011 0010001 0111000 1101100 1111000 0111001 0010001 0010011 1000011 1111000 1100100 1101101 1011101 1100000 1100101 0100011 0100101 0101001 1010011 0000001 1100000 1111111 1010000 1010000 0101010 1101011 0100010 0110100 0001001 1110010 1101010 1010010 0001010 1111101 1100100 0000001 0000100 1100100'
# # #print(decode(new))
# #
# #
# #
# # #print(bin2dec('10000000'))
#
#
#

from tkinter import *

root = Tk()
root.geometry('400x300')


photo = PhotoImage(file='./emoji_file/test.GIF', name='12')
print(photo)
te = Text(root)

te.tag_config('a', background = 'green')
te.insert(END, '/ue41582112323', 'a')
te.image_create(END, image=photo)
# te.mark_set('a', CURRENT)
# te.mark_gravity('a', LEFT)
# print(te.get('a', CURRENT))
te.mark_set('a',  END)
print(CURRENT)

print(photo.cget(option='file'))#file,gamma可用
#print(te.image_cget(1.0, option='file'))
print(te.get(1.0, END))
te.pack()


root.mainloop()



# str = 'sdsdsd/ue419000001'
# # print(str.encode('utf-8'))

